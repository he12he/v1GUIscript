local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- =======================
-- SETTINGS
-- =======================
local correctKey = "1234"
local flySpeed = 50
local flying = false
local bv, bg
local dragging = false
local minSpeed, maxSpeed = 10, 150

-- =======================
-- DRAG FUNCTION
-- =======================
local function makeDraggable(frame, dragHandle)
	local draggingLocal = false
	local dragStart, startPos

	dragHandle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 
			or input.UserInputType == Enum.UserInputType.Touch then
			draggingLocal = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					draggingLocal = false
				end
			end)
		end
	end)

	dragHandle.InputChanged:Connect(function(input)
		if draggingLocal and (input.UserInputType == Enum.UserInputType.MouseMovement 
			or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(
				startPos.X.Scale,
				startPos.X.Offset + delta.X,
				startPos.Y.Scale,
				startPos.Y.Offset + delta.Y
			)
		end
	end)
end

-- =======================
-- GUI Setup
-- =======================
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KeyFlySystem"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Key Frame
local keyFrame = Instance.new("Frame")
keyFrame.Size = UDim2.new(0, 300, 0, 150)
keyFrame.AnchorPoint = Vector2.new(0.5, 0.5)
keyFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
keyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
keyFrame.Parent = screenGui
Instance.new("UICorner", keyFrame).CornerRadius = UDim.new(0, 15)

local keyTitle = Instance.new("TextLabel")
keyTitle.Size = UDim2.new(1, 0, 0, 50)
keyTitle.BackgroundTransparency = 1
keyTitle.Text = "Please enter the key!"
keyTitle.Font = Enum.Font.SourceSansBold
keyTitle.TextSize = 22
keyTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
keyTitle.Parent = keyFrame

local textBox = Instance.new("TextBox")
textBox.Size = UDim2.new(0.8, 0, 0, 40)
textBox.Position = UDim2.new(0.1, 0, 0.5, -20)
textBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
textBox.Text = ""
textBox.PlaceholderText = "Key"
textBox.TextScaled = true
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.Parent = keyFrame
Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 8)

makeDraggable(keyFrame, keyTitle)

-- Main Menu Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 250)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.Visible = false
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 15)

-- Kategorie-Leiste links
local categoryFrame = Instance.new("Frame")
categoryFrame.Size = UDim2.new(0, 100, 1, 0)
categoryFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
categoryFrame.Parent = mainFrame
Instance.new("UICorner", categoryFrame).CornerRadius = UDim.new(0, 10)

-- Inhalt rechts
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -100, 1, 0)
contentFrame.Position = UDim2.new(0, 100, 0, 35) -- unter die TopBar
contentFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
contentFrame.Parent = mainFrame
Instance.new("UICorner", contentFrame).CornerRadius = UDim.new(0, 10)

makeDraggable(mainFrame, categoryFrame)

-- =======================
-- TOP BAR MIT BUTTONS
-- =======================
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 35)
topBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 10)

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -105, 1, 0)
titleLabel.Position = UDim2.new(0, 5, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "V1 Fly Gui"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = topBar

-- Buttons
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 35, 0, 35)
closeButton.Position = UDim2.new(1, -35, 0, 0)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 20
closeButton.Parent = topBar
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(0, 8)

local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 35, 0, 35)
minimizeButton.Position = UDim2.new(1, -70, 0, 0)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 20
minimizeButton.Parent = topBar
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(0, 8)

local smallButton = Instance.new("TextButton")
smallButton.Size = UDim2.new(0, 35, 0, 35)
smallButton.Position = UDim2.new(1, -105, 0, 0)
smallButton.Text = "â–¢"
smallButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
smallButton.TextColor3 = Color3.fromRGB(255, 255, 255)
smallButton.Font = Enum.Font.SourceSansBold
smallButton.TextSize = 20
smallButton.Parent = topBar
Instance.new("UICorner", smallButton).CornerRadius = UDim.new(0, 8)

-- Reopen Icon
local reopenIcon = Instance.new("TextButton")
reopenIcon.Size = UDim2.new(0, 60, 0, 60)
reopenIcon.Position = UDim2.new(0, 20, 1, -80)
reopenIcon.BackgroundColor3 = Color3.fromRGB(50, 50, 200)
reopenIcon.Text = "GUI"
reopenIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
reopenIcon.Font = Enum.Font.SourceSansBold
reopenIcon.TextSize = 18
reopenIcon.Parent = screenGui
reopenIcon.Visible = false
Instance.new("UICorner", reopenIcon).CornerRadius = UDim.new(1, 0)

-- =======================
-- FLY TAB
-- =======================
local flyContent = Instance.new("Frame")
flyContent.Size = UDim2.new(1, 0, 1, 0)
flyContent.BackgroundTransparency = 1
flyContent.Visible = true
flyContent.Parent = contentFrame

local flyLabel = Instance.new("TextLabel")
flyLabel.Size = UDim2.new(0.5, -10, 0, 50)
flyLabel.Position = UDim2.new(0, 10, 0, 20)
flyLabel.BackgroundTransparency = 1
flyLabel.Text = "Fly:"
flyLabel.Font = Enum.Font.SourceSansBold
flyLabel.TextSize = 28
flyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
flyLabel.TextXAlignment = Enum.TextXAlignment.Left
flyLabel.Parent = flyContent

local flyButton = Instance.new("TextButton")
flyButton.Size = UDim2.new(0.4, 0, 0, 50)
flyButton.Position = UDim2.new(0.55, 0, 0, 20)
flyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
flyButton.Text = "Aus"
flyButton.Font = Enum.Font.SourceSansBold
flyButton.TextSize = 24
flyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
flyButton.Parent = flyContent
Instance.new("UICorner", flyButton).CornerRadius = UDim.new(0, 10)

local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(0.8, 0, 0, 20)
sliderFrame.Position = UDim2.new(0.1, 0, 0.6, 0)
sliderFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
sliderFrame.Parent = flyContent
Instance.new("UICorner", sliderFrame).CornerRadius = UDim.new(0, 10)

local sliderButton = Instance.new("Frame")
sliderButton.Size = UDim2.new(0, 20, 1, 0)
sliderButton.Position = UDim2.new((flySpeed-minSpeed)/(maxSpeed-minSpeed), -10, 0, 0)
sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
sliderButton.Parent = sliderFrame
Instance.new("UICorner", sliderButton).CornerRadius = UDim.new(1, 0)

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, 0, 0, 30)
speedLabel.Position = UDim2.new(0, 0, 1.2, 0)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Speed: " .. flySpeed
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 22
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Parent = flyContent

-- =======================
-- TROLL TAB
-- =======================
local trollContent = Instance.new("Frame")
trollContent.Size = UDim2.new(1, 0, 1, 0)
trollContent.BackgroundTransparency = 1
trollContent.Visible = false
trollContent.Parent = contentFrame

local respawnButton = Instance.new("TextButton")
respawnButton.Size = UDim2.new(0.5, 0, 0, 50)
respawnButton.Position = UDim2.new(0.25, 0, 0.4, 0)
respawnButton.BackgroundColor3 = Color3.fromRGB(200, 80, 80)
respawnButton.Text = "Respawn"
respawnButton.Font = Enum.Font.SourceSansBold
respawnButton.TextSize = 22
respawnButton.TextColor3 = Color3.fromRGB(255, 255, 255)
respawnButton.Parent = trollContent
Instance.new("UICorner", respawnButton).CornerRadius = UDim.new(0, 10)

respawnButton.MouseButton1Click:Connect(function()
	LocalPlayer:LoadCharacter()
end)

-- =======================
-- CATEGORY BUTTONS
-- =======================
local function createCategoryButton(name, yPos, callback)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 50)
	btn.Position = UDim2.new(0, 0, 0, yPos)
	btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	btn.Text = name
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 22
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Parent = categoryFrame
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

	btn.MouseButton1Click:Connect(callback)
end

createCategoryButton("Fly", 35, function()
	flyContent.Visible = true
	trollContent.Visible = false
end)

createCategoryButton("Troll", 95, function()
	flyContent.Visible = false
	trollContent.Visible = true
end)

-- =======================
-- FLY SYSTEM
-- =======================
local function stopFly()
	flying = false
	flyButton.Text = "Aus"
	if bv then bv:Destroy() bv = nil end
	if bg then bg:Destroy() bg = nil end
	local char = LocalPlayer.Character
	if char and char:FindFirstChild("Humanoid") then
		char.Humanoid.PlatformStand = false
	end
end

local function startFly()
	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")

	flying = true
	flyButton.Text = "An"

	bv = Instance.new("BodyVelocity")
	bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	bv.Velocity = Vector3.zero
	bv.Parent = hrp

	bg = Instance.new("BodyGyro")
	bg.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
	bg.P = 9e4
	bg.CFrame = hrp.CFrame
	bg.Parent = hrp

	char.Humanoid.PlatformStand = true
end

flyButton.MouseButton1Click:Connect(function()
	if flying then
		stopFly()
	else
		startFly()
	end
end)

RunService.RenderStepped:Connect(function()
	if flying and bv and bg then
		local char = LocalPlayer.Character
		local hrp = char and char:FindFirstChild("HumanoidRootPart")
		if not hrp then return end

		local camCF = workspace.CurrentCamera.CFrame
		local moveVec = Vector3.new()

		if UIS:IsKeyDown(Enum.KeyCode.W) then moveVec += camCF.LookVector end
		if UIS:IsKeyDown(Enum.KeyCode.S) then moveVec -= camCF.LookVector end
		if UIS:IsKeyDown(Enum.KeyCode.A) then moveVec -= camCF.RightVector end
		if UIS:IsKeyDown(Enum.KeyCode.D) then moveVec += camCF.RightVector end
		if UIS:IsKeyDown(Enum.KeyCode.E) then moveVec += Vector3.new(0, 1, 0) end
		if UIS:IsKeyDown(Enum.KeyCode.Q) then moveVec += Vector3.new(0, -1, 0) end

		if moveVec.Magnitude > 0 then
			moveVec = moveVec.Unit * flySpeed
		end

		bv.Velocity = moveVec
		bg.CFrame = camCF
	end
end)

LocalPlayer.CharacterAdded:Connect(function()
	stopFly()
end)

-- =======================
-- SLIDER SYSTEM
-- =======================
local function updateSpeedFromX(xPos)
	local relative = math.clamp((xPos - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
	local newSpeed = math.floor(minSpeed + (maxSpeed - minSpeed) * relative)
	flySpeed = newSpeed
	sliderButton.Position = UDim2.new(relative, -10, 0, 0)
	speedLabel.Text = "Speed: " .. flySpeed
end

sliderFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		updateSpeedFromX(input.Position.X)
	end
end)

sliderFrame.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		updateSpeedFromX(input.Position.X)
	end
end)

UIS.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)

-- =======================
-- BUTTON FUNKTIONEN (X, -, â–¢)
-- =======================
closeButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
	reopenIcon.Visible = true
end)

reopenIcon.MouseButton1Click:Connect(function()
	mainFrame.Visible = true
	reopenIcon.Visible = false
end)

local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		contentFrame.Visible = false
		categoryFrame.Visible = false
	else
		contentFrame.Visible = true
		categoryFrame.Visible = true
	end
end)

local smallMode = false
smallButton.MouseButton1Click:Connect(function()
	smallMode = not smallMode
	if smallMode then
		mainFrame.Size = UDim2.new(0, 200, 0, 100)
		categoryFrame.Visible = false
		contentFrame.Visible = false
		titleLabel.Text = "V1 Fly Gui"
	else
		mainFrame.Size = UDim2.new(0, 400, 0, 250)
		categoryFrame.Visible = true
		contentFrame.Visible = true
		titleLabel.Text = "V1 Fly Gui"
	end
end)

-- =======================
-- KEY CHECK
-- =======================
textBox.FocusLost:Connect(function(enterPressed)
	if enterPressed and textBox.Text == correctKey then
		keyFrame.Visible = false
		mainFrame.Visible = true
	end
end)
