local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- =======================
-- SETTINGS
-- =======================
local correctKey = "1234"
local flySpeed = 50
local flying = false
local bv, bg
local minSpeed, maxSpeed = 10, 150

-- Aimbot Settings
local aimbotEnabled = false
local fovValue = 100
local minFov, maxFov = 10, 200

-- =======================
-- DRAG FUNCTION
-- =======================
local function makeDraggable(frame, dragHandle)
	local dragging = false
	local dragStart, startPos

	dragHandle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 
			or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	dragHandle.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement 
			or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(
				startPos.X.Scale,
				startPos.X.Offset + delta.X,
				startPos.Y.Scale,
				startPos.Y.Offset + delta.Y
			)
		end
	end)
end

-- =======================
-- GUI Setup
-- =======================
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KeyFlySystem"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Key Frame
local keyFrame = Instance.new("Frame")
keyFrame.Size = UDim2.new(0, 300, 0, 150)
keyFrame.AnchorPoint = Vector2.new(0.5, 0.5)
keyFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
keyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
keyFrame.Parent = screenGui
Instance.new("UICorner", keyFrame).CornerRadius = UDim.new(0, 15)

local keyTitle = Instance.new("TextLabel")
keyTitle.Size = UDim2.new(1, 0, 0, 50)
keyTitle.BackgroundTransparency = 1
keyTitle.Text = "Please enter the key!"
keyTitle.Font = Enum.Font.SourceSansBold
keyTitle.TextSize = 22
keyTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
keyTitle.Parent = keyFrame

local textBox = Instance.new("TextBox")
textBox.Size = UDim2.new(0.8, 0, 0, 40)
textBox.Position = UDim2.new(0.1, 0, 0.5, -20)
textBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
textBox.Text = ""
textBox.PlaceholderText = "Key"
textBox.TextScaled = true
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.Parent = keyFrame
Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 8)

makeDraggable(keyFrame, keyTitle)

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 250)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.Visible = false
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 15)

-- Category Frame
local categoryFrame = Instance.new("Frame")
categoryFrame.Size = UDim2.new(0, 100, 1, 0)
categoryFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
categoryFrame.Parent = mainFrame
Instance.new("UICorner", categoryFrame).CornerRadius = UDim.new(0, 10)

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -100, 1, 0)
contentFrame.Position = UDim2.new(0, 100, 0, 35)
contentFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
contentFrame.Parent = mainFrame
Instance.new("UICorner", contentFrame).CornerRadius = UDim.new(0, 10)

makeDraggable(mainFrame, categoryFrame)

-- TopBar
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 35)
topBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 10)

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -105, 1, 0)
titleLabel.Position = UDim2.new(0, 5, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "V1 Fly Gui"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = topBar

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 35, 0, 35)
closeButton.Position = UDim2.new(1, -35, 0, 0)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 20
closeButton.Parent = topBar
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(0, 8)

local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 35, 0, 35)
minimizeButton.Position = UDim2.new(1, -70, 0, 0)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 20
minimizeButton.Parent = topBar
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(0, 8)

local smallButton = Instance.new("TextButton")
smallButton.Size = UDim2.new(0, 35, 0, 35)
smallButton.Position = UDim2.new(1, -105, 0, 0)
smallButton.Text = "â–¢"
smallButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
smallButton.TextColor3 = Color3.fromRGB(255, 255, 255)
smallButton.Font = Enum.Font.SourceSansBold
smallButton.TextSize = 20
smallButton.Parent = topBar
Instance.new("UICorner", smallButton).CornerRadius = UDim.new(0, 8)

-- Reopen Icon
local reopenIcon = Instance.new("TextButton")
reopenIcon.Size = UDim2.new(0, 60, 0, 60)
reopenIcon.Position = UDim2.new(0, 20, 1, -80)
reopenIcon.BackgroundColor3 = Color3.fromRGB(50, 50, 200)
reopenIcon.Text = "GUI"
reopenIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
reopenIcon.Font = Enum.Font.SourceSansBold
reopenIcon.TextSize = 18
reopenIcon.Parent = screenGui
reopenIcon.Visible = false
Instance.new("UICorner", reopenIcon).CornerRadius = UDim.new(1, 0)

-- =======================
-- CATEGORY CONTENT
-- =======================
local flyContent = Instance.new("Frame")
flyContent.Size = UDim2.new(1, 0, 1, 0)
flyContent.BackgroundTransparency = 1
flyContent.Parent = contentFrame

-- Fly Button
local flyToggle = Instance.new("TextButton")
flyToggle.Size = UDim2.new(0.5, -10, 0, 40)
flyToggle.Position = UDim2.new(0.05, 0, 0.1, 0)
flyToggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
flyToggle.Text = "Fly: OFF"
flyToggle.Font = Enum.Font.SourceSansBold
flyToggle.TextSize = 22
flyToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
flyToggle.Parent = flyContent
Instance.new("UICorner", flyToggle).CornerRadius = UDim.new(0, 10)

flyToggle.MouseButton1Click:Connect(function()
	flying = not flying
	flyToggle.Text = "Fly: " .. (flying and "ON" or "OFF")
end)

-- Speed Slider
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0.9, 0, 0, 30)
speedLabel.Position = UDim2.new(0.05, 0, 0.35, 0)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Speed: " .. flySpeed
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 20
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Parent = flyContent

local speedSlider = Instance.new("Frame")
speedSlider.Size = UDim2.new(0.9, 0, 0, 20)
speedSlider.Position = UDim2.new(0.05, 0, 0.5, 0)
speedSlider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
speedSlider.Parent = flyContent
Instance.new("UICorner", speedSlider).CornerRadius = UDim.new(0, 10)

local speedKnob = Instance.new("Frame")
speedKnob.Size = UDim2.new(0, 20, 1, 0)
speedKnob.Position = UDim2.new((flySpeed-minSpeed)/(maxSpeed-minSpeed), -10, 0, 0)
speedKnob.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
speedKnob.Parent = speedSlider
Instance.new("UICorner", speedKnob).CornerRadius = UDim.new(1, 0)

local draggingSpeed = false
local function updateSpeed(xPos)
	local relative = math.clamp((xPos - speedSlider.AbsolutePosition.X) / speedSlider.AbsoluteSize.X, 0, 1)
	flySpeed = math.floor(minSpeed + (maxSpeed - minSpeed) * relative)
	speedKnob.Position = UDim2.new(relative, -10, 0, 0)
	speedLabel.Text = "Speed: " .. flySpeed
end

speedSlider.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSpeed = true
		updateSpeed(input.Position.X)
	end
end)

speedSlider.InputChanged:Connect(function(input)
	if draggingSpeed and input.UserInputType == Enum.UserInputType.MouseMovement then
		updateSpeed(input.Position.X)
	end
end)

UIS.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSpeed = false
	end
end)

-- Player Content
local playerContent = Instance.new("Frame")
playerContent.Size = UDim2.new(1, 0, 1, 0)
playerContent.BackgroundTransparency = 1
playerContent.Visible = false
playerContent.Parent = contentFrame

local respawnBtn = Instance.new("TextButton")
respawnBtn.Size = UDim2.new(0.5, -10, 0, 40)
respawnBtn.Position = UDim2.new(0.05, 0, 0.1, 0)
respawnBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
respawnBtn.Text = "Respawn"
respawnBtn.Font = Enum.Font.SourceSansBold
respawnBtn.TextSize = 22
respawnBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
respawnBtn.Parent = playerContent
Instance.new("UICorner", respawnBtn).CornerRadius = UDim.new(0, 10)

respawnBtn.MouseButton1Click:Connect(function()
	LocalPlayer:LoadCharacter()
end)

-- Aimbot Content
local aimbotContent = Instance.new("Frame")
aimbotContent.Size = UDim2.new(1, 0, 1, 0)
aimbotContent.BackgroundTransparency = 1
aimbotContent.Visible = false
aimbotContent.Parent = contentFrame

if UIS.TouchEnabled then
	local notAvail = Instance.new("TextLabel")
	notAvail.Size = UDim2.new(1, 0, 1, 0)
	notAvail.BackgroundTransparency = 1
	notAvail.Text = "not available for mobile device"
	notAvail.TextColor3 = Color3.fromRGB(255, 50, 50)
	notAvail.Font = Enum.Font.SourceSansBold
	notAvail.TextSize = 24
	notAvail.Parent = aimbotContent
else
	local aimToggle = Instance.new("TextButton")
	aimToggle.Size = UDim2.new(0.5, -10, 0, 40)
	aimToggle.Position = UDim2.new(0.05, 0, 0.1, 0)
	aimToggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	aimToggle.Text = "Aimbot: OFF"
	aimToggle.Font = Enum.Font.SourceSansBold
	aimToggle.TextSize = 22
	aimToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	aimToggle.Parent = aimbotContent
	Instance.new("UICorner", aimToggle).CornerRadius = UDim.new(0, 10)

	aimToggle.MouseButton1Click:Connect(function()
		aimbotEnabled = not aimbotEnabled
		aimToggle.Text = "Aimbot: " .. (aimbotEnabled and "ON" or "OFF")
	end)

	local fovLabel = Instance.new("TextLabel")
	fovLabel.Size = UDim2.new(0.9, 0, 0, 30)
	fovLabel.Position = UDim2.new(0.05, 0, 0.35, 0)
	fovLabel.BackgroundTransparency = 1
	fovLabel.Text = "FOV: " .. fovValue
	fovLabel.Font = Enum.Font.SourceSans
	fovLabel.TextSize = 20
	fovLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	fovLabel.Parent = aimbotContent

	local fovSlider = Instance.new("Frame")
	fovSlider.Size = UDim2.new(0.9, 0, 0, 20)
	fovSlider.Position = UDim2.new(0.05, 0, 0.5, 0)
	fovSlider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	fovSlider.Parent = aimbotContent
	Instance.new("UICorner", fovSlider).CornerRadius = UDim.new(0, 10)

	local fovKnob = Instance.new("Frame")
	fovKnob.Size = UDim2.new(0, 20, 1, 0)
	fovKnob.Position = UDim2.new((fovValue-minFov)/(maxFov-minFov), -10, 0, 0)
	fovKnob.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
	fovKnob.Parent = fovSlider
	Instance.new("UICorner", fovKnob).CornerRadius = UDim.new(1, 0)

	local draggingFov = false
	local function updateFov(xPos)
		local relative = math.clamp((xPos - fovSlider.AbsolutePosition.X) / fovSlider.AbsoluteSize.X, 0, 1)
		fovValue = math.floor(minFov + (maxFov - minFov) * relative)
		fovKnob.Position = UDim2.new(relative, -10, 0, 0)
		fovLabel.Text = "FOV: " .. fovValue
	end

	fovSlider.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			draggingFov = true
			updateFov(input.Position.X)
		end
	end)

	fovSlider.InputChanged:Connect(function(input)
		if draggingFov and input.UserInputType == Enum.UserInputType.MouseMovement then
			updateFov(input.Position.X)
		end
	end)

	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			draggingFov = false
		end
	end)
end

-- =======================
-- CATEGORY BUTTONS
-- =======================
local function createCategoryButton(name, yPos, callback)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 50)
	btn.Position = UDim2.new(0, 0, 0, yPos)
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.Text = name
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 18
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Parent = categoryFrame
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

	btn.MouseButton1Click:Connect(callback)
end

createCategoryButton("Fly", 0, function()
	flyContent.Visible = true
	playerContent.Visible = false
	aimbotContent.Visible = false
end)

createCategoryButton("Player", 50, function()
	flyContent.Visible = false
	playerContent.Visible = true
	aimbotContent.Visible = false
end)

createCategoryButton("Aimbot", 100, function()
	flyContent.Visible = false
	playerContent.Visible = false
	aimbotContent.Visible = true
end)

-- =======================
-- TOGGLE GUI
-- =======================
closeButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
	reopenIcon.Visible = true
end)

reopenIcon.MouseButton1Click:Connect(function()
	mainFrame.Visible = true
	reopenIcon.Visible = false
end)

local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		mainFrame.Size = UDim2.new(0, 200, 0, 100)
		categoryFrame.Visible = false
		contentFrame.Visible = false
		titleLabel.Text = "V1 Fly Gui"
	else
		mainFrame.Size = UDim2.new(0, 400, 0, 250)
		categoryFrame.Visible = true
		contentFrame.Visible = true
		titleLabel.Text = "V1 Fly Gui"
	end
end)

-- =======================
-- KEY CHECK
-- =======================
textBox.FocusLost:Connect(function(enterPressed)
	if enterPressed and textBox.Text == correctKey then
		keyFrame.Visible = false
		mainFrame.Visible = true
	end
end)

-- =======================
-- FLY LOGIC
-- =======================
RunService.RenderStepped:Connect(function()
	if flying and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local root = LocalPlayer.Character.HumanoidRootPart
		if not bv then
			bv = Instance.new("BodyVelocity")
			bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
			bv.Parent = root
		end
		if not bg then
			bg = Instance.new("BodyGyro")
			bg.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
			bg.PARENT = root
		end

		local moveDir = Vector3.new()
		if UIS:IsKeyDown(Enum.KeyCode.W) then moveDir = moveDir + (workspace.CurrentCamera.CFrame.LookVector) end
		if UIS:IsKeyDown(Enum.KeyCode.S) then moveDir = moveDir - (workspace.CurrentCamera.CFrame.LookVector) end
		if UIS:IsKeyDown(Enum.KeyCode.A) then moveDir = moveDir - (workspace.CurrentCamera.CFrame.RightVector) end
		if UIS:IsKeyDown(Enum.KeyCode.D) then moveDir = moveDir + (workspace.CurrentCamera.CFrame.RightVector) end
		if UIS:IsKeyDown(Enum.KeyCode.E) then moveDir = moveDir + Vector3.new(0,1,0) end
		if UIS:IsKeyDown(Enum.KeyCode.Q) then moveDir = moveDir - Vector3.new(0,1,0) end

		bv.Velocity = moveDir.Unit * flySpeed
		bg.CFrame = workspace.CurrentCamera.CFrame
	else
		if bv then bv:Destroy() bv = nil end
		if bg then bg:Destroy() bg = nil end
	end
end)

-- =======================
-- AIMBOT LOGIC
-- =======================
if not UIS.TouchEnabled then
	local function getClosestPlayer()
		local closestPlayer = nil
		local shortestDistance = math.huge
		local mouse = LocalPlayer:GetMouse()

		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
				local head = player.Character.Head
				local pos, visible = workspace.CurrentCamera:WorldToViewportPoint(head.Position)
				if visible then
					local distance = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(pos.X, pos.Y)).Magnitude
					if distance < shortestDistance and distance <= fovValue then
						shortestDistance = distance
						closestPlayer = head
					end
				end
			end
		end
		return closestPlayer
	end

	RunService.RenderStepped:Connect(function()
		if aimbotEnabled and UIS:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
			local target = getClosestPlayer()
			if target then
				workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, target.Position)
			end
		end
	end)
end
