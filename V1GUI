--// Services & Locals
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local nachricht = "Menu loaded!"

-- =======================
-- SETTINGS / STATE
-- =======================
local correctKey = "1234"

-- Fly
local flySpeed = 50
local minSpeed, maxSpeed = 10, 150
local flying = false
local bv, bg

-- Aimbot
local aimbotMenuEnabled = false -- Menü-Schalter
local aimbotActiveMobile = false -- externer Mobile-Schalter
local fovValue = 100
local fovCircleVisible = true
local holdingPC = false          -- Rechtsklick halten (PC)

-- Sliders
local draggingFlySlider = false
local draggingFovSlider = false

-- Device
local isMobile = UIS.TouchEnabled

-- =======================
-- Helpers
-- =======================
local function makeDraggable(frame, dragHandle)
	local dragging = false
	local dragStart, startPos
	dragHandle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	dragHandle.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

local function stopFly()
	flying = false
	if bv then bv:Destroy() bv = nil end
	if bg then bg:Destroy() bg = nil end
	local char = LocalPlayer.Character
	if char and char:FindFirstChildOfClass("Humanoid") then
		char.Humanoid.PlatformStand = false
	end
end

local function startFly()
	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")

	flying = true
	bv = Instance.new("BodyVelocity")
	bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	bv.Velocity  = Vector3.zero
	bv.Parent = hrp

	bg = Instance.new("BodyGyro")
	bg.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
	bg.P = 9e4
	bg.CFrame = hrp.CFrame
	bg.Parent = hrp

	char.Humanoid.PlatformStand = true
end

-- =======================
-- GUI ROOT
-- =======================
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KeyFlySystem"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- =======================
-- KEY MENU
-- =======================
local keyFrame = Instance.new("Frame")
keyFrame.Size = UDim2.fromOffset(300, 200)
keyFrame.AnchorPoint = Vector2.new(0.5, 0.5)
keyFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
keyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
keyFrame.Parent = screenGui
Instance.new("UICorner", keyFrame).CornerRadius = UDim.new(0, 15)

local keyTitle = Instance.new("TextLabel")
keyTitle.Size = UDim2.new(1, 0, 0, 50)
keyTitle.BackgroundTransparency = 1
keyTitle.Text = "Please enter the key!"
keyTitle.Font = Enum.Font.SourceSansBold
keyTitle.TextSize = 22
keyTitle.TextColor3 = Color3.new(1,1,1)
keyTitle.Parent = keyFrame

local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(0.8, 0, 0, 40)
keyBox.Position = UDim2.new(0.1, 0, 0.5, -20)
keyBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
keyBox.Text = ""
keyBox.PlaceholderText = "Key"
keyBox.TextScaled = true
keyBox.TextColor3 = Color3.new(1,1,1)
keyBox.Parent = keyFrame
Instance.new("UICorner", keyBox).CornerRadius = UDim.new(0, 8)

local discordButton = Instance.new("TextButton")
discordButton.Size = UDim2.new(0.8, 0, 0, 35)
discordButton.Position = UDim2.new(0.1, 0, 0.8, 0)
discordButton.BackgroundColor3 = Color3.fromRGB(114, 137, 218)
discordButton.Text = "Discord Link"
discordButton.TextColor3 = Color3.new(1,1,1)
discordButton.Font = Enum.Font.SourceSansBold
discordButton.TextSize = 20
discordButton.Parent = keyFrame
Instance.new("UICorner", discordButton).CornerRadius = UDim.new(0, 8)

discordButton.MouseButton1Click:Connect(function()
	if setclipboard then
		setclipboard("https://discord.gg/genSNpBqrk")
		discordButton.Text = "Link kopiert!"
		task.delay(1.5, function() discordButton.Text = "Discord Link" end)
	else
		discordButton.Text = "Clipboard nicht unterstützt!"
		task.delay(1.5, function() discordButton.Text = "Discord Link" end)
	end
end)

makeDraggable(keyFrame, keyTitle)

-- =======================
-- MAIN MENU
-- =======================
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.fromOffset(420, 270)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.Visible = false
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 15)

local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 35)
topBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 10)

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -110, 1, 0)
titleLabel.Position = UDim2.new(0, 8, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "deins´s Hub"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = topBar

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.fromOffset(35, 35)
closeButton.Position = UDim2.new(1, -35, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.new(1,1,1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.Parent = topBar
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(0, 6)

local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.fromOffset(35, 35)
minimizeButton.Position = UDim2.new(1, -70, 0, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.new(1,1,1)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 18
minimizeButton.Parent = topBar
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(0, 6)

local categoryFrame = Instance.new("Frame")
categoryFrame.Size = UDim2.new(0, 110, 1, -45) -- etwas weiter unten
categoryFrame.Position = UDim2.new(0, 0, 0, 45)
categoryFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
categoryFrame.Parent = mainFrame

local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -110, 1, -45)
contentFrame.Position = UDim2.new(0, 110, 0, 45)
contentFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
contentFrame.Parent = mainFrame

Instance.new("UICorner", categoryFrame).CornerRadius = UDim.new(0, 10)
Instance.new("UICorner", contentFrame).CornerRadius = UDim.new(0, 10)

makeDraggable(mainFrame, topBar)

-- Minimize
local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
	if not minimized then
		mainFrame.Size = UDim2.fromOffset(420, 35)
		categoryFrame.Visible = false
		contentFrame.Visible = false
		minimizeButton.Text = "+"
		minimized = true
	else
		mainFrame.Size = UDim2.fromOffset(420, 270)
		categoryFrame.Visible = true
		contentFrame.Visible = true
		minimizeButton.Text = "-"
		minimized = false
	end
end)

closeButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
end)

-- =======================
-- CONTENT TABS
-- =======================
local flyTab = Instance.new("Frame", contentFrame)
flyTab.Size = UDim2.fromScale(1,1)
flyTab.BackgroundTransparency = 1

local playerTab = Instance.new("Frame", contentFrame)
playerTab.Size = UDim2.fromScale(1,1)
playerTab.BackgroundTransparency = 1
playerTab.Visible = false

local aimbotTab = Instance.new("Frame", contentFrame)
aimbotTab.Size = UDim2.fromScale(1,1)
aimbotTab.BackgroundTransparency = 1
aimbotTab.Visible = false

local function catButton(text, y, cb)
	local b = Instance.new("TextButton")
	b.Size = UDim2.new(1, 0, 0, 40)
	b.Position = UDim2.new(0, 0, 0, y)
	b.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	b.Text = text
	b.Font = Enum.Font.SourceSansBold
	b.TextSize = 20
	b.TextColor3 = Color3.new(1,1,1)
	b.Parent = categoryFrame
	Instance.new("UICorner", b).CornerRadius = UDim.new(0, 8)
	b.MouseButton1Click:Connect(cb)
	return b
end

catButton("Fly", 0, function()
	flyTab.Visible, playerTab.Visible, aimbotTab.Visible = true, false, false
end)
catButton("Player", 45, function()
	flyTab.Visible, playerTab.Visible, aimbotTab.Visible = false, true, false
end)
catButton("Aimbot", 90, function()
	flyTab.Visible, playerTab.Visible, aimbotTab.Visible = false, false, true
end)

-- =======================
-- FLY TAB UI
-- =======================
local flyToggle = Instance.new("TextButton", flyTab)
flyToggle.Size = UDim2.new(0, 140, 0, 40)
flyToggle.Position = UDim2.new(0, 15, 0, 15)
flyToggle.BackgroundColor3 = Color3.fromRGB(80,80,80)
flyToggle.Text = "Fly: AUS"
flyToggle.TextColor3 = Color3.new(1,1,1)
flyToggle.Font = Enum.Font.SourceSansBold
flyToggle.TextSize = 20
Instance.new("UICorner", flyToggle).CornerRadius = UDim.new(0, 8)

local flySlider = Instance.new("Frame", flyTab)
flySlider.Size = UDim2.new(0.9, 0, 0, 22)
flySlider.Position = UDim2.new(0.05, 0, 0, 70)
flySlider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
Instance.new("UICorner", flySlider).CornerRadius = UDim.new(0, 10)

local flyKnob = Instance.new("Frame", flySlider)
flyKnob.Size = UDim2.new(0, 22, 1, 0)
flyKnob.Position = UDim2.new((flySpeed-minSpeed)/(maxSpeed-minSpeed), -11, 0, 0)
flyKnob.BackgroundColor3 = Color3.fromRGB(255, 215, 0)
Instance.new("UICorner", flyKnob).CornerRadius = UDim.new(1, 0)

local flySpeedLabel = Instance.new("TextLabel", flyTab)
flySpeedLabel.Size = UDim2.new(1, 0, 0, 24)
flySpeedLabel.Position = UDim2.new(0, 0, 0, 100)
flySpeedLabel.BackgroundTransparency = 1
flySpeedLabel.Text = "Speed: "..flySpeed
flySpeedLabel.TextColor3 = Color3.new(1,1,1)
flySpeedLabel.Font = Enum.Font.SourceSans
flySpeedLabel.TextSize = 20

-- Mobile Up/Down Buttons (sichtbar nur auf Mobile)
local upBtn, downBtn
if isMobile then
	upBtn = Instance.new("TextButton", flyTab)
	upBtn.Size = UDim2.new(0, 80, 0, 36)
	upBtn.Position = UDim2.new(1, -180, 1, -46)
	upBtn.Text = "UP"
	upBtn.BackgroundColor3 = Color3.fromRGB(100, 180, 100)
	upBtn.TextColor3 = Color3.new(1,1,1)
	upBtn.Font = Enum.Font.SourceSansBold
	upBtn.TextSize = 18
	Instance.new("UICorner", upBtn).CornerRadius = UDim.new(0, 8)

	downBtn = Instance.new("TextButton", flyTab)
	downBtn.Size = UDim2.new(0, 80, 0, 36)
	downBtn.Position = UDim2.new(1, -90, 1, -46)
	downBtn.Text = "DOWN"
	downBtn.BackgroundColor3 = Color3.fromRGB(180, 100, 100)
	downBtn.TextColor3 = Color3.new(1,1,1)
	downBtn.Font = Enum.Font.SourceSansBold
	downBtn.TextSize = 18
	Instance.new("UICorner", downBtn).CornerRadius = UDim.new(0, 8)
end

-- =======================
-- PLAYER TAB (RESPAWN)
-- =======================
local respawnButton = Instance.new("TextButton", playerTab)
respawnButton.Size = UDim2.new(0, 160, 0, 40)
respawnButton.Position = UDim2.new(0, 15, 0, 15)
respawnButton.BackgroundColor3 = Color3.fromRGB(100,100,255)
respawnButton.Text = "Respawn"
respawnButton.TextColor3 = Color3.new(1,1,1)
respawnButton.Font = Enum.Font.SourceSansBold
respawnButton.TextSize = 20
Instance.new("UICorner", respawnButton).CornerRadius = UDim.new(0, 8)

respawnButton.MouseButton1Click:Connect(function()
	if LocalPlayer.Character then
		LocalPlayer.Character:BreakJoints()
	end
end)

-- =======================
-- AIMBOT TAB UI
-- =======================
local aimbotToggle = Instance.new("TextButton", aimbotTab)
aimbotToggle.Size = UDim2.new(0, 160, 0, 40)
aimbotToggle.Position = UDim2.new(0, 15, 0, 15)
aimbotToggle.BackgroundColor3 = Color3.fromRGB(80,80,80)
aimbotToggle.Text = "Aimbot: AUS"
aimbotToggle.TextColor3 = Color3.new(1,1,1)
aimbotToggle.Font = Enum.Font.SourceSansBold
aimbotToggle.TextSize = 20
Instance.new("UICorner", aimbotToggle).CornerRadius = UDim.new(0, 8)

local fovToggle = Instance.new("TextButton", aimbotTab)
fovToggle.Size = UDim2.new(0, 160, 0, 40)
fovToggle.Position = UDim2.new(0, 185, 0, 15)
fovToggle.BackgroundColor3 = Color3.fromRGB(80,80,80)
fovToggle.Text = "FOV: AN"
fovToggle.TextColor3 = Color3.new(1,1,1)
fovToggle.Font = Enum.Font.SourceSansBold
fovToggle.TextSize = 20
Instance.new("UICorner", fovToggle).CornerRadius = UDim.new(0, 8)

local fovSlider = Instance.new("Frame", aimbotTab)
fovSlider.Size = UDim2.new(0.9, 0, 0, 22)
fovSlider.Position = UDim2.new(0.05, 0, 0, 70)
fovSlider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
Instance.new("UICorner", fovSlider).CornerRadius = UDim.new(0, 10)

local fovKnob = Instance.new("Frame", fovSlider)
fovKnob.Size = UDim2.new(0, 22, 1, 0)
fovKnob.Position = UDim2.new((fovValue-10)/(300-10), -11, 0, 0)
fovKnob.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
Instance.new("UICorner", fovKnob).CornerRadius = UDim.new(1, 0)

local fovLabel = Instance.new("TextLabel", aimbotTab)
fovLabel.Size = UDim2.new(1, 0, 0, 24)
fovLabel.Position = UDim2.new(0, 0, 0, 100)
fovLabel.BackgroundTransparency = 1
fovLabel.Text = "FOV: "..fovValue
fovLabel.TextColor3 = Color3.new(1,1,1)
fovLabel.Font = Enum.Font.SourceSans
fovLabel.TextSize = 20

-- =======================
-- FOV CIRCLE (Rainbow)
-- =======================
-- GUI-basierter Kreis (sichtbar auf PC & Mobile)
local fovCircle = Instance.new("Frame")
fovCircle.Name = "FOVCircle"
fovCircle.BackgroundTransparency = 1
fovCircle.Size = UDim2.fromOffset(fovValue*2, fovValue*2)
fovCircle.Position = UDim2.fromOffset(-1000, -1000) -- offscreen bis Update
fovCircle.Parent = screenGui
local fovCorner = Instance.new("UICorner", fovCircle); fovCorner.CornerRadius = UDim.new(1,0)
local fovStroke = Instance.new("UIStroke", fovCircle)
fovStroke.Thickness = 2
fovStroke.Color = Color3.fromRGB(0,255,0)

local function setFovCircleRadius(r)
	fovCircle.Size = UDim2.fromOffset(r*2, r*2)
end

local function setFovCirclePositionFromScreenPoint(v2)
	fovCircle.Position = UDim2.fromOffset(v2.X - fovCircle.AbsoluteSize.X/2, v2.Y - fovCircle.AbsoluteSize.Y/2)
end

-- Rainbow anim
RunService.RenderStepped:Connect(function()
	-- Regenbogen-Farbe
	local h = (os.clock() * 0.2) % 1
	fovStroke.Color = Color3.fromHSV(h, 1, 1)
	-- Position updaten
	local cursor = UIS:GetMouseLocation()
	setFovCirclePositionFromScreenPoint(cursor)
	fovCircle.Visible = aimbotMenuEnabled and fovCircleVisible
end)

-- =======================
-- FLOATING MOBILE AIM BUTTON (nur Handy)
-- =======================
local mobileAimbotBtn
if isMobile then
	mobileAimbotBtn = Instance.new("TextButton")
	mobileAimbotBtn.Size = UDim2.fromOffset(110, 40)
	mobileAimbotBtn.Position = UDim2.new(1, -125, 0.6, 0)
	mobileAimbotBtn.AnchorPoint = Vector2.new(0,0)
	mobileAimbotBtn.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
	mobileAimbotBtn.Text = "Aimbot OFF"
	mobileAimbotBtn.TextColor3 = Color3.new(1,1,1)
	mobileAimbotBtn.Font = Enum.Font.SourceSansBold
	mobileAimbotBtn.TextSize = 18
	mobileAimbotBtn.Visible = false -- nur zeigen, wenn Aimbot im Menü AN ist
	mobileAimbotBtn.Parent = screenGui
	Instance.new("UICorner", mobileAimbotBtn).CornerRadius = UDim.new(0, 10)
	makeDraggable(mobileAimbotBtn, mobileAimbotBtn)

	mobileAimbotBtn.MouseButton1Click:Connect(function()
		if not aimbotMenuEnabled then return end
		aimbotActiveMobile = not aimbotActiveMobile
		mobileAimbotBtn.Text = aimbotActiveMobile and "Aimbot ON" or "Aimbot OFF"
		mobileAimbotBtn.BackgroundColor3 = aimbotActiveMobile and Color3.fromRGB(70,140,70) or Color3.fromRGB(90,90,90)
	end)
end

-- =======================
-- LOGIC: FLY
-- =======================
flyToggle.MouseButton1Click:Connect(function()
	if flying then
		stopFly()
		flyToggle.Text = "Fly: AUS"
		flyToggle.BackgroundColor3 = Color3.fromRGB(80,80,80)
	else
		startFly()
		flyToggle.Text = "Fly: AN"
		flyToggle.BackgroundColor3 = Color3.fromRGB(70,140,70)
	end
end)

local function updateFlySpeedFromX(x)
	local rel = math.clamp((x - flySlider.AbsolutePosition.X)/flySlider.AbsoluteSize.X, 0, 1)
	flySpeed = math.floor(minSpeed + (maxSpeed - minSpeed)*rel)
	flyKnob.Position = UDim2.new(rel, -11, 0, 0)
	flySpeedLabel.Text = "Speed: "..flySpeed
end

flySlider.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingFlySlider = true
		updateFlySpeedFromX(input.Position.X)
	end
end)
flySlider.InputChanged:Connect(function(input)
	if draggingFlySlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		updateFlySpeedFromX(input.Position.X)
	end
end)
UIS.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingFlySlider = false
	end
end)

-- Mobile up/down while flying
local upHeld, downHeld = false, false
if isMobile and upBtn and downBtn then
	upBtn.MouseButton1Down:Connect(function() upHeld = true end)
	upBtn.MouseButton1Up:Connect(function() upHeld = false end)
	downBtn.MouseButton1Down:Connect(function() downHeld = true end)
	downBtn.MouseButton1Up:Connect(function() downHeld = false end)
end

RunService.RenderStepped:Connect(function()
	if flying and bv and bg then
		local char = LocalPlayer.Character
		local hrp = char and char:FindFirstChild("HumanoidRootPart")
		if not hrp then return end

		local camCF = Camera.CFrame
		local move = Vector3.zero

		-- PC: WASD + E/Q
		if UIS:IsKeyDown(Enum.KeyCode.W) then move += camCF.LookVector end
		if UIS:IsKeyDown(Enum.KeyCode.S) then move -= camCF.LookVector end
		if UIS:IsKeyDown(Enum.KeyCode.A) then move -= camCF.RightVector end
		if UIS:IsKeyDown(Enum.KeyCode.D) then move += camCF.RightVector end
		if UIS:IsKeyDown(Enum.KeyCode.E) then move += Vector3.new(0,1,0) end
		if UIS:IsKeyDown(Enum.KeyCode.Q) then move -= Vector3.new(0,1,0) end

		-- Mobile extra Up/Down Buttons
		if isMobile then
			if upHeld then move += Vector3.new(0,1,0) end
			if downHeld then move -= Vector3.new(0,1,0) end
		end

		if move.Magnitude > 0 then
			move = move.Unit * flySpeed
		end

		bv.Velocity = move
		bg.CFrame = camCF
	end
end)

LocalPlayer.CharacterAdded:Connect(function()
	stopFly()
end)

-- =======================
-- LOGIC: AIMBOT
-- =======================
-- PC: Rechtsklick halten
UIS.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		holdingPC = true
	end
end)
UIS.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		holdingPC = false
	end
end)

-- Menü-Schalter
aimbotToggle.MouseButton1Click:Connect(function()
	aimbotMenuEnabled = not aimbotMenuEnabled
	aimbotToggle.Text = aimbotMenuEnabled and "Aimbot: AN" or "Aimbot: AUS"
	aimbotToggle.BackgroundColor3 = aimbotMenuEnabled and Color3.fromRGB(70,140,70) or Color3.fromRGB(80,80,80)
	-- Mobile: Floating-Button nur anzeigen, wenn Menü an
	if isMobile and mobileAimbotBtn then
		mobileAimbotBtn.Visible = aimbotMenuEnabled
		if not aimbotMenuEnabled then
			aimbotActiveMobile = false
			mobileAimbotBtn.Text = "Aimbot OFF"
			mobileAimbotBtn.BackgroundColor3 = Color3.fromRGB(90,90,90)
		end
	end
end)

-- FOV Toggle
fovToggle.MouseButton1Click:Connect(function()
	fovCircleVisible = not fovCircleVisible
	fovToggle.Text = fovCircleVisible and "FOV: AN" or "FOV: AUS"
	fovToggle.BackgroundColor3 = fovCircleVisible and Color3.fromRGB(70,140,70) or Color3.fromRGB(80,80,80)
end)

-- FOV Slider
local function updateFovFromX(x)
	local rel = math.clamp((x - fovSlider.AbsolutePosition.X)/fovSlider.AbsoluteSize.X, 0, 1)
	fovValue = math.floor(10 + (300-10)*rel)
	fovKnob.Position = UDim2.new(rel, -11, 0, 0)
	fovLabel.Text = "FOV: "..fovValue
	setFovCircleRadius(fovValue)
end
fovSlider.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingFovSlider = true
		updateFovFromX(input.Position.X)
	end
end)
fovSlider.InputChanged:Connect(function(input)
	if draggingFovSlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		updateFovFromX(input.Position.X)
	end
end)
UIS.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingFovSlider = false
	end
end)

-- Aimbot Update
local function getClosestHeadInFOV(radius)
	local mouse = UIS:GetMouseLocation()
	local best, bestMag
	for _,plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") then
			local head = plr.Character.Head
			local v3, onScreen = Camera:WorldToViewportPoint(head.Position)
			if onScreen then
				local mag = (Vector2.new(v3.X, v3.Y) - mouse).Magnitude
				if mag <= radius and (not bestMag or mag < bestMag) then
					best = head
					bestMag = mag
				end
			end
		end
	end
	return best
end

RunService.RenderStepped:Connect(function()
	-- Aktive Bedingung:
	-- PC: Menü AN + Rechtsklick halten
	-- Mobile: Menü AN + externer Button ON
	local active = false
	if not isMobile then
		active = aimbotMenuEnabled and holdingPC
	else
		active = aimbotMenuEnabled and aimbotActiveMobile
	end

	if active then
		local target = getClosestHeadInFOV(fovValue)
		if target then
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
		end
	end
end)

-- =======================
-- KEY CHECK
-- =======================
keyBox.FocusLost:Connect(function(enter)
	if enter then
		if keyBox.Text == correctKey then
			keyBox.Text = "Loading."
			task.wait(0.25)
			keyBox.Text = "Loading.."
			task.wait(0.25)
			keyBox.Text = "Loading..."
			task.wait(0.25)
			keyFrame.Visible = false
			mainFrame.Visible = true
			StarterGui:SetCore("SendNotification", {
				Title = "Valid Key",
				Text = nachricht,
				Duration = 5,
			})
		setclipboard("https://discord.gg/genSNpBqrk")
		else
			keyBox.Text = ""
			keyBox.PlaceholderText = "Wrong Key!"
		end
	end
end)
